[% import "../script/FlexmlUtils.eol"; %]
/**
 * Generated from TemplateElement.egl at @GENERATIONTIME@
 * If changes are necessary, make them there
 */
package flexml.elements;

[% if (element.hasChildren()) { %]
import java.util.List;
import java.util.ArrayList;
[% } %]
/**
 * 
 * [%= element.desc %]<br>
[% if (element.hasChildren()) { %]
 * It has the following children
 * <ul>
[% for (child in element.child) { var childElement : Element = child.getChildElement(); %]
 * <li> {@link [%= childElement.getElementClassName() %]
[% } %]} 
 * </ul>
[% } else { %]
 * It has no children
[% } %] 
 */
public class [%= element.getElementClassName() %] {
	[% if(element.hasText()) { %]
	private String text = "";
	[% } %]
	[% for (attribute in element.attribute) { %]
	private String [%= attribute.name %];
	[% } %]

	[% for (child in element.child) { %]
	[% var childElement : Element = child.getChildElement(); %]
	private List <[%= childElement.getElementClassName() %]> [%= childElement.name %] = new ArrayList<>();
	[% } %]	

	public [%= element.getElementClassName() %]() {
		
	}

	/*
	 * MODIFIERS
	 */
	[% if(element.hasText()) { %]
	public void appendText(String inText) {
		text = text + inText;
	}
	
	[% } %]
	[% for (attribute in element.attribute) { %]
	public void [%= attribute.getSetterName() %](String [%= attribute.getInputParameterName() %]) {
		[%= attribute.getInputAssignment() %]
	}

	[% } %]
	[% for (child in element.child) { %]
	[% var childElement : Element = child.getChildElement(); %]
	public void add[%= childElement.getMethodName() %]([%= childElement.getElementClassName() %] [%= childElement.getInputParameterName() %]) {
		[%= childElement.name %].add([%= childElement.getInputParameterName() %]);
	}
	
	[% } %]
	
	/*
	 * ACCESSORS
	 */
	[% if(element.hasText()) { %]
	/**
	 * @return The text content of the element
	 */	
	public String getText() {
		return text;
	}
	
	[% } %]
	[% for (attribute in element.attribute) { %]
	public String [%= attribute.getGetterName() %]() {
		return [%= attribute.name %];
	}
	[% } %]

	[% for (child in element.child) { %]
	[% var childElement : Element = child.getChildElement(); %]
	/**
	 * @return [%= childElement.desc %]
	 */	
	public List<[%= childElement.getElementClassName() %]> [%= childElement.getGetterName() %]() {
		return [%= childElement.name %];
	}
	
	[% } %]
	
	/*
	 * OVERRIDE
	 */
	@Override
	public String toString() {
		String result = "<[%= element.getElementName() %]";
	[% for (attribute in element.attribute) { %]
		if (null != [%= attribute.getGetterName() %]()) {
			result = result + " [%= attribute.name %] = \"" + [%= attribute.getGetterName() %]() +"\"";
			} 
	[% } %]
		result = result + ">";
	[% if(element.hasText()) { %]
		result = result + text;
	[% } %]
	[% for (child in element.child) { %]
	[% var childElement : Element = child.getChildElement(); %]
		for ([%= childElement.getElementClassName() %] cur: [%= childElement.name %]) {
			result = result + cur.toString();
		}
	[% } %]	
		result = result + "</[%= element.getElementName() %]>";
		return result;
	}

}
